name: Build and Deploy to Cloud Run

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

env:
  PROJECT_ID: checkup-bot-2
  SERVICE: 'checkup-bot'
  REGION: 'us-central1'

jobs:
  deploy:
    # Add 'id-token' with the intended permissions for workload identity federation
    permissions:
      contents: 'read'
      id-token: 'write'

    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@v2'
        with:
          token_format: 'access_token'
          workload_identity_provider: '${{ secrets.WIF_PROVIDER }}'
          service_account: '${{ secrets.WIF_SERVICE_ACCOUNT }}'

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'zulu'
          cache: maven
        
      - name: Build
        run: mvn -B package --file ./checkup-bot-backend/pom.xml

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@v3'
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push backend
        uses: docker/build-push-action@v5
        with:
          context: ./checkup-bot-backend
          push: true
          tags: checkupbot/checkup-bot:latest

      - name: Build and push frontend
        uses: docker/build-push-action@v5
        with:
          context: ./frontend
          push: true
          tags: checkupbot/checkup-bot-frontend:latest

      - name: Build and push reverse proxy
        uses: docker/build-push-action@v5
        with:
          context: ./nginx/gcloud
          push: true
          tags: checkupbot/checkup-bot-reverse-proxy:latest

      - name: Deploy reverse proxy to Cloud Run
        id: deploy-reverse-proxy
        uses: google-github-actions/deploy-cloudrun@v0
        with:
          service: ${{ env.SERVICE }}
          region: ${{ env.REGION }}
          image: docker.io/checkupbot/checkup-bot-reverse-proxy:latest

      - name: Show Reverse Proxy Output
        run: echo ${{ steps.deploy-reverse-proxy.outputs.url }}
